plugins {
    id 'maven-publish'
    id 'java-library'
    id 'signing'
}

group 'com.keimons.deepjson'
version '0.1.2-alpha'

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

repositories {
    mavenCentral()
}

dependencies {
    api 'org.jetbrains:annotations:20.1.0'
    compileOnly 'io.netty:netty-all:4.1.67.Final'
    compileOnly 'com.google.guava:guava:30.1.1-jre'
    compileOnly 'org.codehaus.groovy:groovy:3.0.8'

    testImplementation 'io.netty:netty-all:4.1.67.Final'
    testImplementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'com.google.guava:guava:30.1.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Bundle-Name': 'DeepJson'
        attributes 'Created-By': 'Gradle' + ' ' + gradle.gradleVersion
        attributes 'Automatic-Module-Name': 'deepjson'
    }
    into('META-INF/maven/com/keimons/deepjson') {
        from './build/publications/deepjson/pom-default.xml'
        rename "pom-default.xml", "pom.xml"
    }
}

jar.dependsOn 'generatePomFileForDeepjsonPublication'

compileTestJava {
    options.encoding = "UTF-8"
    options.compilerArgs = [
            '-source', '9', '-target', '9',
            '--module-path', classpath.asPath
    ]
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    // 定义发布什么
    publications {
        Deepjson(MavenPublication) {
            // groupId = project.group
            // artifactId = project.name
            // version = project.version
            // groupId,artifactId,version，如果不定义，则会按照以上默认值执行
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                // 构件名称
                // 区别于artifactId，可以理解为artifactName
                name = 'DeepJson'
                // 构件描述
                description = 'JSON for Java'
                // 构件主页
                url = 'https://deepjson.keimons.com'
                // 许可证名称和地址
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        name = 'keimons'
                        email = 'admin@keimons.com'
                    }
                }
                // 版本控制仓库地址
                scm {
                    url = 'https://github.com/keimons/deepjson'
                    connection = 'scm:git:git://github.com/keimons/deepjson.git'
                    developerConnection = 'https://github.com/keimons/deepjson.git'
                }
            }
        }
    }
    // 定义发布到哪里
    repositories {
        maven {
            // url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                // 这里就是之前在issues.sonatype.org注册的账号
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.Deepjson
}

javadoc {
    // 诡异的很，Gradle竟然找不到classpath中的文件
    options.modulePath = classpath.files.toList()
    options.encoding = 'UTF-8'
}